-- 최초 schema. H2, Postgres 공통
CREATE SEQUENCE SEQ_LOGIN_HISTORY_ID INCREMENT BY 1 NO MINVALUE NO MAXVALUE START WITH 100 CYCLE;
CREATE SEQUENCE SEQ_ROLE_GROUP_ID INCREMENT BY 1 NO MINVALUE NO MAXVALUE START WITH 100;
CREATE TABLE ADMIN_USER (
  USER_NAME           varchar(50) NOT NULL,
  USER_PASSWORD       varchar(255) NOT NULL,
  DISPLAY_NAME        varchar(50) NOT NULL,
  LOGIN_FAILURE_COUNT int4 DEFAULT 0 NOT NULL,
  DT_CREATE           timestamp DEFAULT CURRENT_DATE NOT NULL,
  DT_UPDATE           timestamp DEFAULT CURRENT_DATE,
  DT_LAST_LOGIN       timestamp,
  USER_ENABLE         char(1) DEFAULT 'N' NOT NULL,
  ROLE_GROUP_ID       int4 NOT NULL,
  PRIMARY KEY (USER_NAME));
COMMENT ON COLUMN ADMIN_USER.USER_PASSWORD IS 'bcrypt user password';
COMMENT ON COLUMN ADMIN_USER.DISPLAY_NAME IS '화면 표시 이름.';
CREATE TABLE COMMON_CODE (
  CODE             varchar(20) NOT NULL,
  CODE_NAME        varchar(50) NOT NULL,
  CODE_DESCRIPTION varchar(2048),
  YN_USE           char(1) DEFAULT 'N' NOT NULL,
  PARENT_CODE      varchar(20),
  PRIMARY KEY (CODE));
COMMENT ON COLUMN COMMON_CODE.CODE IS '공통 코드';
CREATE TABLE GROUP_ROLES (
  ROLE_GROUP_ID int4 NOT NULL,
  ROLE_NAME     varchar(50) NOT NULL,
  PRIMARY KEY (ROLE_GROUP_ID,
  ROLE_NAME));
CREATE TABLE LOGIN_HISTORY (
  HISTORY_ID     int8 NOT NULL,
  USER_NAME      varchar(50) NOT NULL,
  LOGIN_DATE     timestamp DEFAULT CURRENT_DATE NOT NULL,
  SUCCESS        char(1) DEFAULT 'N' NOT NULL,
  CLIENT_ADDRESS varchar(255),
  MESSAGE        varchar(1024),
  PRIMARY KEY (HISTORY_ID));
COMMENT ON COLUMN LOGIN_HISTORY.SUCCESS IS '로그인 성공 실패 여부.';
COMMENT ON COLUMN LOGIN_HISTORY.CLIENT_ADDRESS IS '접속지 IP.';
CREATE TABLE PROPERTY (
  PROPERTY_KEY         varchar(50) NOT NULL,
  PROPERTY_VALUE       varchar(255),
  PROPERTY_DESCRIPTION varchar(2048),
  PRIMARY KEY (PROPERTY_KEY));
COMMENT ON TABLE PROPERTY IS 'general persistence property';
CREATE TABLE ROLE_GROUP (
  ROLE_GROUP_ID          SERIAL NOT NULL,
  ROLE_GROUP_NAME        varchar(50) NOT NULL,
  ROLE_GROUP_DESCRIPTION varchar(2048),
  PRIMARY KEY (ROLE_GROUP_ID));
CREATE TABLE UPLOAD_FILE (
  FILE_ID            char(36) NOT NULL,
  FILE_NAME          varchar(512) NOT NULL,
  ORIGINAL_FILE_NAME varchar(512) NOT NULL,
  CONTENT_TYPE       varchar(1024) NOT NULL,
  FILE_SIZE          int8 NOT NULL,
  FILE_COMMENT       varchar(2048),
  STORAGE_TYPE       char(1) DEFAULT 'D' NOT NULL,
  REPOSITORY_PATH    varchar(1024),
  FILE_CONTENT       bytea,
  PRIMARY KEY (FILE_ID));
COMMENT ON COLUMN UPLOAD_FILE.FILE_ID IS 'file ID as GUID';
COMMENT ON COLUMN UPLOAD_FILE.STORAGE_TYPE IS 'D = DB, F = File System, S = S3, ...';
COMMENT ON COLUMN UPLOAD_FILE.REPOSITORY_PATH IS 'STORAGE_TYPE = F 일때 저장된 위치.';
COMMENT ON COLUMN UPLOAD_FILE.FILE_CONTENT IS 'STORAGE_TYPE 이 D 일때 파일 바이너리';
CREATE TABLE USER_ROLE (
  ROLE_NAME        varchar(50) NOT NULL,
  ROLE_DESCRIPTION varchar(2048),
  PRIMARY KEY (ROLE_NAME));
COMMENT ON COLUMN USER_ROLE.ROLE_NAME IS 'MENU1, MENU1_VIEW, ...';
ALTER TABLE GROUP_ROLES ADD CONSTRAINT FKGROUP_ROLE367978 FOREIGN KEY (ROLE_GROUP_ID) REFERENCES ROLE_GROUP (ROLE_GROUP_ID);
ALTER TABLE GROUP_ROLES ADD CONSTRAINT FKGROUP_ROLE719735 FOREIGN KEY (ROLE_NAME) REFERENCES USER_ROLE (ROLE_NAME);
ALTER TABLE ADMIN_USER ADD CONSTRAINT FKADMIN_USER376867 FOREIGN KEY (ROLE_GROUP_ID) REFERENCES ROLE_GROUP (ROLE_GROUP_ID);
ALTER TABLE COMMON_CODE ADD CONSTRAINT FKCOMMON_COD183604 FOREIGN KEY (PARENT_CODE) REFERENCES COMMON_CODE (CODE);
